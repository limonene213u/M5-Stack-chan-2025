// カスタム日本語フォント - 基本的なひらがな・カタカナ・漢字対応
// 8x16ピクセル ビットマップフォント
#pragma once
#include <stdint.h>

// フォント設定
#define CUSTOM_FONT_WIDTH  8
#define CUSTOM_FONT_HEIGHT 16
#define CUSTOM_FONT_COUNT  96  // 基本的な文字数

// フォントビットマップデータ構造体
struct FontChar {
    uint16_t unicode;      // Unicode文字コード
    uint8_t bitmap[16];    // 8x16ビットマップデータ
};

// 基本的な日本語文字セット（ひらがな・カタカナ・基本漢字）
const PROGMEM FontChar custom_japanese_font[] = {
    // ひらがな「あ」(U+3042)
    {0x3042, {
        0x00, 0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42,
        0x46, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // ひらがな「い」(U+3044)  
    {0x3044, {
        0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
        0x10, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // ひらがな「う」(U+3046)
    {0x3046, {
        0x00, 0x00, 0x3C, 0x40, 0x40, 0x3C, 0x02, 0x02,
        0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // ひらがな「え」(U+3048)
    {0x3048, {
        0x00, 0x00, 0x7E, 0x40, 0x40, 0x7C, 0x40, 0x40,
        0x40, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // ひらがな「お」(U+304A)
    {0x304A, {
        0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42,
        0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // カタカナ「ア」(U+30A2)
    {0x30A2, {
        0x00, 0x00, 0x10, 0x28, 0x28, 0x44, 0x7C, 0x44,
        0x82, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // カタカナ「イ」(U+30A4)
    {0x30A4, {
        0x00, 0x00, 0x08, 0x08, 0x08, 0x7E, 0x08, 0x08,
        0x10, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // 漢字「日」(U+65E5)
    {0x65E5, {
        0x00, 0x00, 0x3E, 0x22, 0x22, 0x3E, 0x22, 0x22,
        0x22, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // 漢字「本」(U+672C)
    {0x672C, {
        0x00, 0x00, 0x10, 0x10, 0x10, 0x7E, 0x10, 0x10,
        0x28, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // 漢字「語」(U+8A9E)
    {0x8A9E, {
        0x00, 0x00, 0x7E, 0x48, 0x48, 0x7E, 0x48, 0x48,
        0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // スペース（U+0020）
    {0x0020, {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // 感嘆符「！」(U+FF01)
    {0xFF01, {
        0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
        0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }},
    
    // 疑問符「？」(U+FF1F)
    {0xFF1F, {
        0x00, 0x00, 0x3C, 0x42, 0x02, 0x0C, 0x10, 0x10,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    }}
};

const uint16_t custom_japanese_font_count = sizeof(custom_japanese_font) / sizeof(FontChar);

// フォント検索関数の宣言
const FontChar* findFontChar(uint16_t unicode);
void drawCustomChar(int x, int y, uint16_t unicode, uint16_t color);
void drawCustomString(int x, int y, const char* str, uint16_t color);
